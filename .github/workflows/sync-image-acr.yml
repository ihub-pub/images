name: Sync Image to ACR

on:
  push:
    paths: ".github/images/**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_name: [nacos,sentinel,shields]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Git pull
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - id: set_var
      run: |
        content=`cat .github/images/${{ matrix.image_name }}.json`
        # the following lines are only required for multi line json
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        # end of optional handling for multi line json
        echo "::set-output name=imageJson::$content"
    - run: |
        echo "::set-output name=registry::${{fromJson(steps.set_var.outputs.imageJson).registry}}"
        echo "::set-output name=namespace::${{fromJson(steps.set_var.outputs.imageJson).namespace}}"
        echo "::set-output name=name::${{fromJson(steps.set_var.outputs.imageJson).name}}"
        echo "::set-output name=version::${{fromJson(steps.set_var.outputs.imageJson).version}}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Login to ACR
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: registry.cn-beijing.aliyuncs.com
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        logout: false

    - name: Use Skopeo Tools Sync Image to ACR
      run: |
         skopeo copy docker://${{fromJson(steps.set_var.outputs.imageJson).registry}}/${{fromJson(steps.set_var.outputs.imageJson).namespace}}/${{fromJson(steps.set_var.outputs.imageJson).name}}:${{fromJson(steps.set_var.outputs.imageJson).version}} docker://registry.cn-beijing.aliyuncs.com/ihub-pub/${{ matrix.image_name }}:${{fromJson(steps.set_var.outputs.imageJson).version}} |
         skopeo copy docker://${{fromJson(steps.set_var.outputs.imageJson).registry}}/${{fromJson(steps.set_var.outputs.imageJson).namespace}}/${{fromJson(steps.set_var.outputs.imageJson).name}}:${{fromJson(steps.set_var.outputs.imageJson).version}} docker://registry.cn-beijing.aliyuncs.com/ihub-pub/${{ matrix.image_name }}:latest
